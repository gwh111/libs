(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{213:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"库的使用需知"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#库的使用需知","aria-hidden":"true"}},[t._v("#")]),t._v(" 库的使用需知")]),t._v(" "),a("h2",{attrs:{id:"为什么制定规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么制定规范","aria-hidden":"true"}},[t._v("#")]),t._v(" 为什么制定规范")]),t._v(" "),a("p",[t._v("树立规范是为了培养意识，人的意识是按照实物的真实存在+意识的反射形成的，如：\n你看到一张纸是白色的，那么首先这张纸有白色的特征，你看到它是白色的（你有学习过什么是白色的概念）所以有了你认为这张纸是白色的意识。")]),t._v(" "),a("p",[t._v("这之间就有因果的关系，我们所有的行为都由 "),a("strong",[t._v("因")]),t._v(" 产生，这就是人的意识。你的认知决定你做出的行为，因为你的知识储备使你认为当时这么做是最合适的才会这么去做。\n树立规范的理想结果是我们遇到同类的情景时能立即意识到如何编写代码，这一系列过程的产生前期是学习的，后期就是条件反射的，就如大家开车看到红灯就会停下一样自然。")]),t._v(" "),a("p",[t._v("这样的好处一是代码变得规范，二是开发者编写代码更流畅，可以把精力投入具体业务中。")]),t._v(" "),a("h2",{attrs:{id:"通用代码规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通用代码规范","aria-hidden":"true"}},[t._v("#")]),t._v(" 通用代码规范")]),t._v(" "),a("p",[t._v("编码、命名等基础规范。强制类需要强制执行，建议类不强制但要思考你的方法是否在当时情况下是更好的方法，如大量出现需提交给集团讨论。")]),t._v(" "),a("h3",{attrs:{id:"不能出现-建议优化方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不能出现-建议优化方法","aria-hidden":"true"}},[t._v("#")]),t._v(" 不能出现+建议优化方法")]),t._v(" "),a("p",[t._v("不能出现是指代码编写中不能出现的情况，需要想办法避免，采用建议优化方法去优化，或提出更好的优化方法给我们。")]),t._v(" "),a("div",{staticClass:"danger custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("强制")]),t._v(" "),a("p",[t._v("【强制】类和文件夹的命名用大驼峰式，属性命名用小驼峰式。\n【强制】宏定义全部大写，用_分割。\n【强制】图片等资源命名用小写英文单词，用下划线_分割，尽量用业务_模块_功能的格式命名。\n【强制】文件夹名称可用中文但不要出现空格、特殊字符。\n【强制】使用物理文件夹存放相关类和文件。\n【强制】不可出现大量注释掉的代码段，不需要的代码和类及时删除。\n【强制】控件的tag用static变量命名，不要直接使用tag，包括魔法数字。\n可以通过声明增强语义。static NSInteger passwordErrorTag = 102。\n【强制】大量数据解析的接口，UI的初始化和数据加载方法分离，不要在数据解析成功后再初始化UI，防止UI多次重复绘制。\n【强制】除新app、紧急项目、紧急bug、回归测试的bug外，代码在分支修改。\n【强制】在模拟器不能编译的库用平台语言#忽略，保证项目能可以同时在模拟器和真机运行。\n【强制】view、model中不写网络请求，各司其职。\n将控制逻辑代码放到控制器里。\n【强制】view中不做数据处理，只做赋值显示。数据统一在接口返回后预处理，数据处理尽量放在子线程。\n【强制】每个人自己的代码规范保持统一（包括空格、括号、换行的习惯），如果是修改他人文件，按照之前格式或全部改成你的格式。一个文件中不能出现两种风格。保持代码整洁和对齐，不要出现大量空格、特殊符号和换行。\n【强制】一个控制器不能超过 "),a("strong",[t._v("800")]),t._v(' 行代码。\n如果超过，采用 CC_Controller 拆分单个控制器中的业务模块。\n【强制】两个模块的 View 不直接交互，不要出现大量互相依赖。\n两个模块通过各自控制器交互，或者统一使用一个类交互。\n【强制】发送通知 object 放通知的对象，userInfo 放需要传递的参数。\n[[NSNotificationCenter defaultCenter]postNotificationName:@"" object:nil userInfo:nil];\n【强制】业务代码方法不能超过 '),a("strong",[t._v("500")]),t._v(" 行代码。\n【强制】不要出现引用头文件 但是没有使用。\n【强制】使用 BOOL 值，用 YES 和 NO。")])]),t._v(" "),a("div",{staticClass:"warning custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("建议")]),t._v(" "),a("p",[t._v("【建议】尽量不要去重写init方法。可以把初始化的代码写在 start 函数中。\n默认使用 ccs init: 方法获取对象会首先调用该类的 start 函数（如果有的话）。\n【建议】提交代码尽量不要有warning。\n【建议】NSString和Block修饰符，使用copy。\n【建议】init、viewdidload方法中不要超过10行代码，尽量抽出方法。\n【建议】避免数组越界，使用array时，使用array.count确保数据index不越界。\n【建议】有数据尽量不写死的想法，可变数据尽量让服务端返回。\n【建议】他人写的代码在没有理解的情况，不要轻易删除或修改，找作者帮助。\n【建议】判断嵌套不要太多，使用提前return的方式。")])]),t._v(" "),a("h3",{attrs:{id:"bench-ios-代码添加规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bench-ios-代码添加规范","aria-hidden":"true"}},[t._v("#")]),t._v(" bench_ios 代码添加规范")]),t._v(" "),a("div",{staticClass:"language-swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//等号或其他符号两边加空格")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" @property "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nonatomic"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("retain"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSDictionary")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("cc_modelDic"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//属性")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSDictionary")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//类和 * 之间有空格")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("void"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("cc_setProperty"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSDictionary")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("dic"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//函数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("void"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("cc_setProperty"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSDictionary")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("dic "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//函数实现括号前有一个空格")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//if 和 else 两边有空格")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" 两行函数之间有一行空格\n")])])]),a("h3",{attrs:{id:"考核建议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#考核建议","aria-hidden":"true"}},[t._v("#")]),t._v(" 考核建议")]),t._v(" "),a("p",[t._v("在季度谈话中主管抽查代码，找出不合理的部分提问。")]),t._v(" "),a("ol",[a("li",[t._v("出现以上 "),a("a",{attrs:{href:"#%E4%B8%8D%E8%83%BD%E5%87%BA%E7%8E%B0-%E5%BB%BA%E8%AE%AE%E4%BC%98%E5%8C%96%E6%96%B9%E6%B3%95"}},[t._v("不能出现")]),t._v(" 的情况减分。")]),t._v(" "),a("li",[t._v("没有使用建议优化方案使用了自己的方案需说明理由，理由不充分者减分，主管记录提交给集团，如采纳作为一个新标准可加分。")]),t._v(" "),a("li",[t._v("根据 "),a("a",{attrs:{href:"#%E7%BB%84%E4%BB%B6%E5%BA%93%E5%B0%81%E8%A3%85%E8%A7%84%E8%8C%83"}},[t._v("组件库封装规范")]),t._v(" 提供功能库成员可酌情加分。")])]),t._v(" "),a("h2",{attrs:{id:"使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用")]),t._v(" "),a("p",[t._v("如引用库报错，先将引用库都更新到最新版，如一定要使用历史版本出现问题的，联系集团小伙伴。")]),t._v(" "),a("p",[t._v("To integrate bench_ios into your Xcode project using CocoaPods, specify it in your "),a("code",[t._v("Podfile")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[t._v("platform "),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":ios")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'8.0'")]),t._v("\n\ntarget "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'TargetName'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n  pod "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bench_ios'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n")])])]),a("h2",{attrs:{id:"组件库封装规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件库封装规范","aria-hidden":"true"}},[t._v("#")]),t._v(" 组件库封装规范")]),t._v(" "),a("p",[t._v("组件库接入都采用 bench_ios 的扩展的方式。")]),t._v(" "),a("div",{staticClass:"warning custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("使用 bench_ios 接入组件库 "),a("strong",[t._v("不需要修改")]),t._v(" 组件库已有的任何代码，只是在上面加一层调用规范，同时可以消除依赖。")])]),t._v(" "),a("p",[t._v("bench_ios 可以接入各种库，需要为库添加ccs分类：")]),t._v(" "),a("ol",[a("li",[a("em",[a("strong",[t._v("File - New File - Objective-C File")])])]),t._v(" "),a("li",[t._v("选择 ***File Type: Category - Class: ccs - File: 库的名称(如 CatPhotoPicker\b\b)***。")]),t._v(" "),a("li",[t._v("这样就生成了 ccs+库名的分类。")])]),t._v(" "),a("h3",{attrs:{id:"库名的规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#库名的规范","aria-hidden":"true"}},[t._v("#")]),t._v(" 库名的规范")]),t._v(" "),a("p",[t._v("库名必须明显，尽可能包含库的功能。\n降低使用 "),a("a",{attrs:{href:"https://gwh111.github.io/2019/10/11/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E7%9A%84%E5%93%B2%E5%AD%A6",target:"_blank",rel:"noopener noreferrer"}},[t._v("认知负荷"),a("OutboundLink")],1),t._v("，使用者最低学习成本是'知道库名'。")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v('在实际使用中，需要 #import "ccs+库名.h"，通过 [ccs 库名_] 就可联想出使用方法。')])]),t._v(" "),a("h3",{attrs:{id:"包装的规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#包装的规范","aria-hidden":"true"}},[t._v("#")]),t._v(" 包装的规范")]),t._v(" "),a("p",[t._v("假设包装一个 DCBuryPointMgr 的库。包装后使用者可以0依赖调用这个库，通过 ccs+BuryPoint.h 来调用，而 ccs+BuryPoint.h 和 DCBuryPointMgr.h 是没有依赖的。")]),t._v(" "),a("h3",{attrs:{id:"如果包装的库是实例方法。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如果包装的库是实例方法。","aria-hidden":"true"}},[t._v("#")]),t._v(" 如果包装的库是实例方法。")]),t._v(" "),a("p",[t._v("例：如果 DCBuryPointMgr 中有这么一个实例方法。")]),t._v(" "),a("div",{staticClass:"language-swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("void"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("changeFromStrWith"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSString")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("changedStr index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSInteger")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("在 ccs+BuryPoint.h 中包装成：")]),t._v(" "),a("div",{staticClass:"language-swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("void"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("buryPoint_changeFromStrWith"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSString")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("changedStr index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSInteger")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("在 ccs+BuryPoint.m 内部这样实现可完全消除依赖：")]),t._v(" "),a("div",{staticClass:"language-swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[t._v("id instance "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("cc_message cc_targetClass"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("@"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DCBuryPointMgr"')]),t._v(" method"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("@"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"shareInstance"')]),t._v(" params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("nil")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("cc_message cc_targetInstance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("instance method"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("@"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"changeFromStrWith:index:"')]),t._v(" params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("changedStr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("包装后 "),a("strong",[t._v("使用者视角")])]),t._v(" "),a("div",{staticClass:"language-swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ccs buryPoint_changeFromStrWith"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("@"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),t._v(" index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"如果包装的库都是类方法。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如果包装的库都是类方法。","aria-hidden":"true"}},[t._v("#")]),t._v(" 如果包装的库都是类方法。")]),t._v(" "),a("p",[t._v("例：如果 DCBuryPointMgr 中有这么一个类方法。")]),t._v(" "),a("div",{staticClass:"language-swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("void"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("appendEventAction"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSString")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("action"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("在 ccs+BuryPoint.h 中包装成：")]),t._v(" "),a("div",{staticClass:"language-swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("void"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("buryPoint_appendEventAction"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSString")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("action"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("在 ccs+BuryPoint.m 内部这样实现可完全消除依赖：")]),t._v(" "),a("div",{staticClass:"language-swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("void"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("buryPoint_appendEventAction"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSString")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("action "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("cc_message cc_targetClass"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("@"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DCBuryPointMgr"')]),t._v(" method"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("@"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"appendEventAction:"')]),t._v(" params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("action"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("包装后 "),a("strong",[t._v("使用者视角")])]),t._v(" "),a("div",{staticClass:"language-swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ccs buryPoint_appendEventAction"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("@"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"ccs-分类-api-的规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ccs-分类-api-的规范","aria-hidden":"true"}},[t._v("#")]),t._v(" ccs 分类 API 的规范")]),t._v(" "),a("p",[t._v("分类的API按照 "),a("strong",[t._v("库名")]),t._v(" + "),a("strong",[t._v("动作")]),t._v(" + "),a("strong",[t._v("with参数")]),t._v(" + "),a("strong",[t._v("参数")]),t._v(" 格式编写，使整行阅读有完整的语义，如：")]),t._v(" "),a("div",{staticClass:"language-swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("CatPickerPhotoController")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("catPhotoPicker_presentViewControllerWithMode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("CatPickerPhotoMode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("catPickerPhotoMode delegate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("delegate viewController"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("viewController"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("那么在调用时按照 "),a("strong",[t._v("ccs")]),t._v(" + "),a("strong",[t._v("库名")]),t._v(" + "),a("strong",[t._v("方法")]),t._v(" + "),a("strong",[t._v("传参")]),t._v(" 的思想去编写，如：")]),t._v(" "),a("div",{staticClass:"language-swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ccs catPhotoPicker_presentViewControllerWithMode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("CatPickerPhotoModeMultiple")]),t._v(" delegate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v(" viewController"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"两种类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#两种类型","aria-hidden":"true"}},[t._v("#")]),t._v(" 两种类型")]),t._v(" "),a("p",[t._v("我们将封装的库分为两大类：完整通用系统 + 通用系统核心组件和功能组件。\n它们的区别在于一个有完整功能，只需要起调API即可，另一个是部分功能，需要自行拼装使用。\n因此它们的规范也有部分区别，核心组件和功能组件为了调用更灵活，可以在分类中引入API，即参与链接过程，而完整通用系统调用较为单一，使用运行时消息转发的机制调用，不参与链接可增加启动速度。")]),t._v(" "),a("h3",{attrs:{id:"完整通用系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#完整通用系统","aria-hidden":"true"}},[t._v("#")]),t._v(" 完整通用系统")]),t._v(" "),a("p",[t._v("是指一个完整通用系统，包含核心和UI，一般调用方接入只需一个调用函数和一个返回响应回调即可。"),a("em",[a("strong",[t._v("可完全解耦 消除依赖。")])])]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("完整通用系统 = 通用系统核心 + 通用UI。")])]),t._v(" "),a("ol",[a("li",[t._v("以_库名为前缀，如 "),a("strong",[t._v("CatPhotoPicker")]),t._v(" 这个库（这里当做通用系统库进行封装）：")])]),t._v(" "),a("div",{staticClass:"language-swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("catPhotoPicker_presentSingleModeWithDelegate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("delegate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("使用 cc_message 实现库方法调用：")])]),t._v(" "),a("div",{staticClass:"language-swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("catPhotoPicker_presentSingleModeWithDelegate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("delegate "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    id vc "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("cc_message cc_targetClass"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("@"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CatPickerPhotoController"')]),t._v(" method"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("@"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"controllerWithMode:delegate:"')]),t._v(" params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("CC_Int")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" delegate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("cc_message cc_targetInstance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("vc method"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("@"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"presentFromRootViewController:"')]),t._v(" params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("delegate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" vc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("将所有属性封装成一个 config 方法，调用组件者不需要去组件h文件看有多少属性可以配置：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n")])])]),a("ol",{attrs:{start:"4"}},[a("li",[t._v("最终达到的效果是使用方只需打出库名即可获得全部联想，无需查看组件库文档或h文件：")])]),t._v(" "),a("div",{staticClass:"language-swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ccs catPhotoPicker_presentSingleModeWithDelegate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"引用问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引用问题","aria-hidden":"true"}},[t._v("#")]),t._v(" 引用问题")]),t._v(" "),a("p",[t._v('ccs+CatPhotoPicker.h 文件中不要引用库，即分类.h\b和.m文件只引用 #import "ccs.h" 。这样组件库才不会参与链接，就可以独立存放。')]),t._v(" "),a("h4",{attrs:{id:"传值问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#传值问题","aria-hidden":"true"}},[t._v("#")]),t._v(" 传值问题")]),t._v(" "),a("p",[t._v("如果需要传递数值而不是对象，使用封装的基础数据如传递数值0：")]),t._v(" "),a("div",{staticClass:"language-swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("CC_Int")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[t._v("传递数值1.20：")]),t._v(" "),a("div",{staticClass:"language-swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("CC_Float")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("h4",{attrs:{id:"注释问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注释问题","aria-hidden":"true"}},[t._v("#")]),t._v(" 注释问题")]),t._v(" "),a("p",[t._v("封装的分类用描述性语言描述API，尽可能读一遍就清楚API的作用，如特殊情况一定需要添加注释，采用如下格式：")]),t._v(" "),a("div",{staticClass:"language-swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n 特殊描述\n @param 参数 参数说明\n @return 返回值说明\n */")]),t._v("\n")])])]),a("h3",{attrs:{id:"通用系统核心组件和功能组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通用系统核心组件和功能组件","aria-hidden":"true"}},[t._v("#")]),t._v(" 通用系统核心组件和功能组件")]),t._v(" "),a("p",[t._v("通用系统的核心，以及一些UI库等功能性的组件库。"),a("em",[a("strong",[t._v("没有消除依赖。")])])]),t._v(" "),a("ol",[a("li",[t._v("以_库名为前缀，如 "),a("strong",[t._v("CatPhotoPicker")]),t._v(" 这个库（这里当做功能库进行封装）：")])]),t._v(" "),a("div",{staticClass:"language-swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("CatPickerPhotoController")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("catPhotoPicker_presentViewControllerWithMode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("CatPickerPhotoMode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("catPickerPhotoMode delegate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("delegate viewController"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("viewController"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("在m文件调用API 实现功能：")])]),t._v(" "),a("div",{staticClass:"language-swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("CatPickerPhotoController")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("catPhotoPicker_presentViewControllerWithMode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("CatPickerPhotoMode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("catPickerPhotoMode delegate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("delegate viewController"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("viewController "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("CatPickerPhotoController")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("vc "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("CatPickerPhotoController")]),t._v(" controllerWithMode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("catPickerPhotoMode delegate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("delegate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("vc presentFromRootViewController"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("viewController"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    vc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("maxCount "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" vc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("最终达到的效果是使用方只需打出库名即可获得全部联想，无需查看组件库文档或h文件：")])]),t._v(" "),a("div",{staticClass:"language-swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ccs catPhotoPicker_presentViewControllerWithMode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("CatPickerPhotoModeMultiple")]),t._v(" delegate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v(" viewController"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("ol",{attrs:{start:"4"}},[a("li",[t._v("如需自定义配置才去获取实例配置响应属性或调用方法：")])]),t._v(" "),a("div",{staticClass:"language-swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("CatPickerPhotoController")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("pickerPhoto "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ccs catPhotoPicker_presentViewControllerWithMode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("CatPickerPhotoModeMultiple")]),t._v(" delegate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v(" viewController"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\npickerPhoto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("maxCount "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"修改-bench-ios-库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改-bench-ios-库","aria-hidden":"true"}},[t._v("#")]),t._v(" 修改 bench_ios 库")]),t._v(" "),a("div",{staticClass:"danger custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("对于 bench_ios 的任何改动都要谨慎，特别是改动API，改动API需要检查其他库主干情况，如有调用到该API，需要及时修改，保证其他库打出的新版本没有问题。")])])])}),[],!1,null,null,null);s.default=e.exports}}]);